 #version 330
in vec4 iColor;
in vec4 vN;
in vec4 vL;
in vec4 vV;
in vec2 iTexCoord;
in vec3 iVertex;

uniform sampler2D textureMap0;
uniform samplerCube cube;
uniform bool textured;
uniform mat4 V;
out vec4 pixelColor; //Zmienna wyjsciowa fragment shadera. Zapisuje sie do niej ostateczny (prawie) kolor piksela

void main(void) {
    vec4 lCol = vec4(1.0f,0.8f,0.7f,1.0f);
    vec4 mN = normalize(vN);
    vec4 mV = normalize(vV);
    vec4 mL = normalize(vL);
    float lam = 0.7*max(dot(mN,mL),0.0f);
    vec4 mR = reflect(-mL,-mN);
    float pho = 0.01*pow(max(dot(mV,mR),0.0f),40);
    vec2 size = textureSize(textureMap0, 0);
    vec4 color;
    if(size.x>1 && size.y>1)
        color=texture(textureMap0,iTexCoord);
    else
        color = iColor;
    color = (1.0f-color.w)*iColor + color.w*color;
    color.w =1.0f;
    pixelColor = 0.2*color + color*vec4(lam,lam,lam,1.0f) + vec4(pho,pho,pho,0.0);
}
